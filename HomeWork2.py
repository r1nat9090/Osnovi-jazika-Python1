
#1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
# s = [25, 'hello', 25.25, True, [5,7], 'privet, drug', ('privet', 12.5, 12)]
# for i in s:
#     print(type(i))
#2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
# s = [input(), input(), input(), input(), input()]
# s[0], s[1] = s[1], s[0]
# s[2], s[3] = s[3], s[2]
# print(s)
#3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
#dict:
# dict_month = {1: 'Январь, Зима', 2: 'Февраль, Зима', 3: 'Март, Весна', 4: 'Апрель, Весна', 5: 'Май, Весна', 6: 'Июнь, Лето', 7: 'Июль, Лето', 8: 'Август, Лето',9: 'Сентябрь, Осень',10: 'Октябрь, Осень', 11: 'Ноябрь, Осень', 12: 'Декабрь, Зима',}
# n = int(input('Введите месяц в виде целого числа от 1 до 12: '))
# print('Месяц:', dict_month[n])
#list:
# n = int(input('Введите месяц в виде целого числа от 1 до 12: '))
# s = ['Зима', 'Весна', 'Лето', 'Осень']
# if n == 1 or n == 2 or n == 2:
#     print(s[0])
# elif 2 < n < 6:
#     print(s[1])
# elif 5 < n < 9:
#     print(s[2])
# elif 8 < n < 12:
#     print(s[3])
# else:
#     print('Число должно было быть от 1 до 12')
#4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
# n = input('Введите строку из нескольких слов, разделённых пробелами: ')
# q = n.split()
# for i, element in enumerate(q, 1):
#     if len(element) < 11:
#         print(i, element)
#     else:
#         print(i, element[:10])
#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
# my_list = [7, 5, 3, 3, 2]
# n = int(input('Введите натуральное число: '))
# for i in range(len(my_list)):
#     if n > my_list[i]:
#         my_list.append(n)
#         my_list.sort(reverse = True)
#         break
# print(my_list)
#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь
# с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#q_1 = (1, {"название": input('Введите название первого товара: '), "цена": input('Введите стоимость первого товара: '), "количество": input('Введите количество первого товара: '), "eд": input('Введите единицу измерения для первого товара: ')})
#q_2 = (2, {"название": input('Введите название второго товара: '), "цена": input('Введите стоимость второго товара: '), "количество": input('Введите количество второго товара: '), "eд": input('Введите единицу измерения для второго товара: ')})
#q_3 = (3, {"название": input('Введите название третьего товара: '), "цена": input('Введите стоимость третьего товара: '), "количество": input('Введите количество третьего товара: '), "eд": input('Введите единицу измерения для третьего товара: ')})
# q_1 = (1, {"название": "компьютер", "цена": "50000", "количество": "10", "eд": "шт."})
# q_2 = (2, {"название": "монитор", "цена": "20000", "количество": "20", "eд": "шт."})
# q_3 = (3, {"название": "клавиатура", "цена": "1000", "количество": "100", "eд": "шт."})
# q_4 = []
# dict_1 = q_1[1]
# dict_2 =  q_2[1]
# dict_3 =  q_3[1]
# dict_4 = {"название": [q_1[1]["название"], q_2[1]["название"], q_3[1]["название"]],"цена": [q_1[1]["цена"], q_2[1]["цена"], q_3[1]["цена"]], "количество": [q_1[1]["количество"], q_2[1]["количество"], q_3[1]["количество"]], "eд": [q_1[1]["eд"]]}
# print('Название: ', dict_4["название"])
# print('Цена: ', dict_4["цена"])
# print('Количество: ', dict_4["количество"])
# print('Ед": ', dict_4["eд"])